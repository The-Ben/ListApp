{"ast":null,"code":"const initialState = {\n  items: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TO_LIST\":\n      return { ...state,\n        items: [...state.items, {\n          value: action.payload,\n          inBasket: false\n        }]\n      };\n\n    case \"CLEAR_ITEMS\":\n      {\n        return {\n          items: []\n        };\n      }\n\n    case \"ADD_TO _BASKET\":\n      return { ...state,\n        items: updateObjectInArray(state.items, action)\n      };\n\n    case \"REMOVE_ITEM\":\n      return { ...state,\n        items: removeItemFromList(state.items, actions)\n      };\n\n    default:\n      return state;\n  }\n});\n\nfunction updateObjectInArray(array, action) {\n  return array.map((item, index) => {\n    if (index !== action.index) {\n      //Item we keep as is\n      return item;\n    } //item we want - return updated value\n\n\n    return { ...item,\n      inBasket: true\n    };\n  });\n}\n\n;\n\nfunction removeItemFromList(array, action) {\n  return arraay.filter((item, index) => index !== action.index);\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/ReactProject/Project2/ListApp/src/store/reducer.js"],"names":["initialState","items","state","action","type","value","payload","inBasket","updateObjectInArray","removeItemFromList","actions","array","map","item","index","arraay","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAiC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFD,QAAAA,KAAK,EAAE,CACH,GAAGC,KAAK,CAACD,KADN,EAEH;AACII,UAAAA,KAAK,EAAEF,MAAM,CAACG,OADlB;AAEIC,UAAAA,QAAQ,EAAE;AAFd,SAFG;AAFL,OAAN;;AAUJ,SAAK,aAAL;AAAoB;AAChB,eAAM;AACFN,UAAAA,KAAK,EAAC;AADJ,SAAN;AAGH;;AACD,SAAK,gBAAL;AACI,aAAM,EACF,GAAGC,KADD;AAEFD,QAAAA,KAAK,EAAEO,mBAAmB,CAACN,KAAK,CAACD,KAAP,EAAcE,MAAd;AAFxB,OAAN;;AAIJ,SAAK,aAAL;AACI,aAAM,EACF,GAAGD,KADD;AAEFD,QAAAA,KAAK,EAAEQ,kBAAkB,CAACP,KAAK,CAACD,KAAP,EAAaS,OAAb;AAFvB,OAAN;;AAIA;AACA,aAAOR,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,SAASM,mBAAT,CAA6BG,KAA7B,EAAoCR,MAApC,EAA2C;AACvC,SAAOQ,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC5B,QAAGA,KAAK,KAAKX,MAAM,CAACW,KAApB,EAA0B;AACtB;AACA,aAAOD,IAAP;AACH,KAJ2B,CAK5B;;;AACA,WAAO,EACH,GAAGA,IADA;AAEHN,MAAAA,QAAQ,EAAC;AAFN,KAAP;AAIH,GAVM,CAAP;AAWH;;AAAA;;AAED,SAASE,kBAAT,CAA4BE,KAA5B,EAAmCR,MAAnC,EAA0C;AACtC,SAAOY,MAAM,CAACC,MAAP,CAAc,CAACH,IAAD,EAAOC,KAAP,KAAgBA,KAAK,KAAKX,MAAM,CAACW,KAA/C,CAAP;AACH","sourcesContent":["const initialState = {\r\n    items: []\r\n}\r\n\r\nexport default (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case \"ADD_TO_LIST\":\r\n            return{\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    {\r\n                        value: action.payload,\r\n                        inBasket: false\r\n                    }\r\n                ]\r\n            };\r\n        case \"CLEAR_ITEMS\": {\r\n            return{\r\n                items:[]\r\n            };\r\n        }\r\n        case \"ADD_TO _BASKET\":\r\n            return{\r\n                ...state,\r\n                items: updateObjectInArray(state.items, action)\r\n            };\r\n        case \"REMOVE_ITEM\":\r\n            return{\r\n                ...state,\r\n                items: removeItemFromList(state.items,actions)\r\n            };\r\n            default: \r\n            return state;\r\n    }\r\n}\r\n\r\nfunction updateObjectInArray(array, action){\r\n    return array.map((item, index)=>{\r\n        if(index !== action.index){\r\n            //Item we keep as is\r\n            return item\r\n        }\r\n        //item we want - return updated value\r\n        return {\r\n            ...item,\r\n            inBasket:true\r\n        };\r\n    });\r\n};\r\n\r\nfunction removeItemFromList(array, action){\r\n    return arraay.filter((item, index)=> index !== action.index)\r\n}"]},"metadata":{},"sourceType":"module"}